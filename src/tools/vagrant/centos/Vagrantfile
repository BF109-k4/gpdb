require 'yaml'

# Basic Vagrant config (API version 2)
Vagrant.configure(2) do |config|
  # Base box: Centos-7 box
  # NOTE: Over time the VMI below may become outdated, so may need to be
  #       substituted with a more recent VMI
  config.vm.box = 'centos/7'

  config.vm.hostname = 'gpdbvagrant'

  # Give a reasonable amount of cpu and memory to the VM
  def config_vm_provider(config, vb_name)
    config.vm.provider :virtualbox do |vb|
      vb.name = vb_name # Name in VirtualBox
      vb.memory = 8192
      vb.cpus = 4
      vb.customize ['storagectl', :id, '--name', 'IDE', '--hostiocache', 'on']
      vb.customize ['modifyvm', :id, '--cableconnected1', 'on']
    end
  end

  if File.file?('vagrant-local.yml')
    local_config = YAML.load_file('vagrant-local.yml')
    local_config['synced_folder'].each do |folder|
      unless folder['local'].nil? || folder['shared'].nil?
        config.vm.synced_folder folder['local'], folder['shared']
      end
    end
  end

  gpdb_build_args = ['--with-perl', '--with-python', '--with-libxml']

  config.vm.define(:gpdb) do |gpdb|
    config_vm_provider(config, 'gpdb-dev-host')
    gpdb.vm.provision 'shell', path: 'vagrant-setup.sh'
    gpdb.vm.provision 'shell', path: 'vagrant-configure-os.sh'
    gpdb.vm.provision(
      'shell',
      path: 'vagrant-build-gporca.sh',
      privileged: false
    )
    gpdb.vm.provision(
      'shell',
      path: 'vagrant-build-gpdb.sh',
      privileged: false,
      args: gpdb_build_args
    )
  end

  config.vm.define(:gpdb_without_gporca) do |gpdb_without_gporca|
    config_vm_provider(config, 'gpdb_without_gporca-dev-host')
    gpdb_without_gporca.vm.provision 'shell', path: 'vagrant-setup.sh'
    gpdb_without_gporca.vm.provision 'shell', path: 'vagrant-configure-os.sh'
    gpdb_without_gporca.vm.provision(
      'shell',
      path: 'vagrant-build-gpdb.sh',
      privileged: false,
      args: gpdb_build_args << '--disable-orca'
    )
  end
end
